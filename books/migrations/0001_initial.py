# Generated by Django 3.2 on 2021-04-28 10:09

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('salutation', models.CharField(max_length=255, verbose_name='Salutation')),
                ('name', models.CharField(max_length=255, verbose_name='Author Name')),
                ('email', models.EmailField(max_length=255, verbose_name='Author Email')),
                ('avatar', models.ImageField(height_field=100, upload_to='author/', verbose_name='Author Image', width_field=100)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Publisher Name')),
                ('address', models.CharField(max_length=255, verbose_name='Publisher Address')),
                ('city', models.CharField(max_length=255, verbose_name='City')),
                ('state_province', models.CharField(max_length=255, verbose_name='State')),
                ('country', models.CharField(max_length=255, verbose_name='Country')),
                ('website', models.URLField(verbose_name='Publisher Website URL')),
                ('latitiude', models.DecimalField(blank=True, decimal_places=15, default=0, max_digits=19, null=True, verbose_name='Latitude')),
                ('longitude', models.DecimalField(blank=True, decimal_places=15, default=0, max_digits=19, null=True, verbose_name='Longitude')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, unique=True, verbose_name='Title')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Book Title')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Book Description')),
                ('summary', models.TextField(blank=True, null=True, verbose_name='Book Summary')),
                ('publication_date', models.DateField(verbose_name='Publication Date')),
                ('state', models.CharField(choices=[('published', 'Published'), ('not_published', 'Not published'), ('in_progress', 'In progress'), ('cancelled', 'Cancelled'), ('rejected', 'Rejected')], default='published', max_length=255, verbose_name='State')),
                ('isbn', models.CharField(max_length=255, unique=True, verbose_name='ISBN')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Price')),
                ('pages', models.PositiveIntegerField(default=200, verbose_name='Pages No')),
                ('stock_count', models.PositiveIntegerField(default=30, verbose_name='Stock Count')),
                ('authors', models.ManyToManyField(related_name='books', to='books.Author', verbose_name='Authors')),
                ('publisher', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='books', to='books.publisher')),
                ('tags', models.ManyToManyField(blank=True, related_name='books', to='books.Tag', verbose_name='Tag')),
            ],
            options={
                'ordering': ['isbn'],
            },
        ),
    ]
